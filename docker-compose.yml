services:
  # 應用程式服務 (Web Service)
  web:
    # 告訴 Docker Compose 在當前目錄下使用 Dockerfile 建立映像檔
    build: .
    # 將容器的 5000 埠號映射到主機的 8000 埠號
    # 這樣你可以透過 http://localhost:8000 訪問
    # ports:
    #   - "8000:5000"

    # 確保 web 服務在 mongodb 服務啟動後才啟動
    depends_on:
      - mongodb
    command: ["gunicorn", "-w", "4", "-b", "0.0.0.0:5000", "app:app"]
    restart: always

  # 2. Nginx 反向代理服務 (處理公網埠號 80/443)
  nginx:
    image: nginx:stable-alpine
    # 將主機的 80 埠號映射到 Nginx 容器的 80 埠號
    ports:
      - "80:80"
    volumes:
      # 將我們剛建立的設定檔掛載到 Nginx 容器的正確位置
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web # 確保 web 服務啟動後才啟動 Nginx

  # 資料庫服務 (NoSQL DB Service)
  mongodb:
    # 使用官方的 MongoDB 映像檔
    image: mongo:latest
    # 將 MongoDB 的資料儲存到主機的持久化空間中
    volumes:
      - mongo_data:/data/db
    # 映射埠號 (可選，但有助於除錯)
    ports:
      - "27017:27017"

# 定義一個 Volume，用於持久化儲存 MongoDB 的資料
volumes:
  mongo_data:
